x-postgres-common: &postgres-common
  image: postgres:18rc1
  restart: always
  healthcheck:
    test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d postgres']
    interval: 10s
    timeout: 5s
    retries: 5

x-postgres-replica-common: &postgres-replica-common
  <<: *postgres-common
  user: postgres
  command: >
    sh -c "
      until pg_isready -h postgres -p 5432 -U ${POSTGRES_USER}; do
        echo 'Waiting for primary to be ready...';
        sleep 2;
      done;
      if [ -z "$(ls -A /var/lib/postgresql/18/docker)" ]; then
        echo 'Running pg_basebackup...';
        pg_basebackup -h postgres -p 5432 -D /var/lib/postgresql/18/docker -U ${POSTGRES_USER} -vP -w --wal-method=stream;
        echo 'primary_conninfo = \'host=postgres port=5432 user=${POSTGRES_USER} password=${POSTGRES_PASSWORD}\'\' >> /var/lib/postgresql/18/docker/postgresql.conf;
        touch /var/lib/postgresql/18/docker/standby.signal;
      fi;
      exec postgres -c shared_preload_libraries='pg_stat_statements' -c max_connections=200
    "
  depends_on:
    postgres:
      condition: service_healthy

services:
  postgres:
    <<: *postgres-common
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGUSER: ${POSTGRES_USER}
    ports:
      - '5432:5432'
    volumes:
      - postgres:/var/lib/postgresql/18/docker
      - ./conf/pg_hba.conf:/var/lib/postgresql/18/docker/pg_hba.conf
    command: postgres -c shared_preload_libraries='pg_stat_statements' -c wal_level=logical -c max_wal_senders=5 -c max_replication_slots=5 -c hot_standby=on

  postgres-replica-1:
    <<: *postgres-replica-common
    container_name: postgres-replica-1
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGUSER: ${POSTGRES_USER}
    ports:
      - '5433:5432'
    volumes:
      - postgres-replica-1:/var/lib/postgresql/18/docker

  postgres-replica-2:
    <<: *postgres-replica-common
    container_name: postgres-replica-2
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGUSER: ${POSTGRES_USER}
    ports:
      - '5434:5432'
    volumes:
      - postgres-replica-2:/var/lib/postgresql/18/docker

#networks:
#  default:
#    external: true
#    name: nginx-proxy-manager_default

volumes:
  postgres:
    driver: local
  postgres-replica-1:
    driver: local
  postgres-replica-2:
    driver: local
